  -- -- -- Vim Tutorial/Cheat Sheet ('The Ultimate') -- -- --
__   <--- PS: Try the star (*) command on the underscores


EXTREME Newbies' Tip ----
- Install Vim

  Vim can be installed on ALL major
  computer platforms (including Android), 
  and can also be installed as modes
  for MANY popular code editors
  (Visual Studio, VS Code,
  JetBrains editors like Rider,
  and even Emacs and web-browsers
  like Firefox)

- Press 'i' to go to Insert-Mode

  The editor can then used as usual
  (select text with the mouse, use
  arrow keys to move, etc)


TABLE OF CONTENTS (the 'key-commands' of Vim) ------------
------
h j k l
i a I A  Esc
  Ctrl+n  Ctrl+x Ctrl+...
o O
u  Ctrl+r
V v     o O
w b  e
  0 $
+-----------------+
|  d   c   y   p  |
+-----------------+
>  <
  .      # <----- (TOO GOOD TO BE TRUE)
  ZZ ZQ
------
Ctrl+w +  s v w
------
f t F T  ; ,
/ ?  * #  n N  gn   # Searching uses Regular Expressions
%  { } ( )
Ctrl+o Ctrl+i
:  !                # Open/Use the Command-Line/Shell
  :0  :$
:help               # built-in Help-system
  Ctrl+]
------
m  '  `
"
q  @
g ...             # g (and z) as 'magic prefix' commands
----------------------------------------------------------



:set guifont=*      open font/font-size selector menu
:colors ron         set colorscheme ron (Blue/Cyan)
:colors <Ctrl+D>    show list of colorschemes

:edit  :e file.txt      open/edit a file
:update  :up        save file
gf      Follow/Jump to file-path file  __ *****
:!mkdir -p ~/dir/subdir/  create directory
----
[Note: ALL Bash/Shell-commands
  can be run from the Vim Command-line]


  k              basic movement
h   l
  j

:write   :w         save file (regardless of change/existance)

:help
  c-leftclick / c-rightclick       follow / go back from helpdocs-link

:q       Quit
:qa      Quit All

---- v = visual mode -----------------------
V           linewise visual mode
Ctrl+v      visual block mode
    v           visual mode (character-wise)
gv          reactivate last visual selection

---- i / a = insert / append -----------------------
i                   go to insert mode
    I               -- " --  at start of line / selection
    a
    A               -- " --  at end of line
<Esc>    Ctrl+C     back to normal mode
----
Word Completion (in insert-mode)       c-n / c-p  __ *****
  c-x c-f  (c-x c-l, ...)

u        Undo __
    Ctrl+r      repeat

gi       restart editing at last edit (i.e. insert mode) point

    (+tips: using the s and S commands)

---- o / O = open -----------------------
o        open new line below
    O        -- " -- above
    J    Join lines

.        repeat last action (****) __

@:       repeat/rerun last commandline action

---- movement -----------------------
w        word (=to start of next)
    b       back (=to beg. of prev. word)
    e
0        start of line
    $       end of line

x        cross out (=delete) a character
    dw
    d$
    d0
    2dw
    2w
    ce
rx       replace (=one character)

---- d = delete -----------------------
dd       delete (=whole line)
    dw       delete to next word
    2dd
---- c = change -----------------------
ce           change (i.e. delete + go to insert-mode) **
    c$

---- y = yank -----------------------
yy       yank (=copy) whole line
    p        paste

---- more movements -------------------
gg           go to beginning of file
    G            go to end of file
    22G
c-f c-b      forward/backward (one screen)
    c-e c-y      -- " -- (one line)
    { / }        move up / down past a paragraph
             (tip: try on this text)

#Note: 'g' is often used to modify or "enhance" other commands

---- Windows and Splits ---------------
c-w s       horizontal split
c-w v       vertical split
    c-w w       go to next split/window
ZZ          close window and save
ZQ          close window without saving


---- indent/deindent ------------------
>        indent
    <        deindent
>>       indent line
    >}       indent rest of 'paragraph'


---- 'find'/'to' (=character) ------------
f
    t
    F
    T
    ; / ,       next / prev. match


---- Searching -----------------------
/ ?          search forward/backward
                  #Tip: supports patterns (i.e. Regex)
    n
    N
    /TODO        search for the word TODO
    /<Up>     up/down (while searching) navigates search-history **
    /wor<Up>
*             search (forward) word under cursor
    #         search (backward)    -- " --
gn            Operate on search-matches (e.g. 'dgn' - delete next match)
 ----
[TIP: Vim-searching supports a
 RIDICULOUSLY powerful version of
 Regular Expressions]

Ctrl+o Ctrl+i     'Out' / 'In'
} / {             next / prev. paragraph
) / (             next / prev. sentence

%                 jump between matching braces

---- 'Add' / 'Extract' -------------------------
Ctrl+a / Ctrl+x      add to / subtract from next number


---- :substitute / :global -----------------------
:substitute/pattern
:s/old/new/  :s/old/new/g  :%s/o/n/g  :%s/o/n/gc

:g/patt/normal .      rerun 'last action' on all lines matching search-pattern
:g//normal @a         run macro 'a' on all lines matching last search-pattern
  [VERY powerful(!)]


---- setting Options -----------------------------
:set ignorecase(ic)  :set noic  :set hlsearch(hls)  :set incsearch(is)   :set hls!

:options    setting options + getting good overview  =HOT TIP

---- Marks 1 ---------------------------------
ma                  set invisible mark "a"
    'a / `a             jump back to invis. mark "a"


BLOCKS / 'Text Objects'
    word                        iw aw
    sentence                    is as
    paragraph                   is ap
    (-block                     ib ab  i) a)
    {-Block                     iB aB  i} a}
    [-block, <-block            i[ ...
    "-quotation, '-quotation, `-quotation    ci" ...
    tags(=html/xml) *           it
    <html></html>
    -----
Examples:
    dap      delete (and copy) paragraph (+blank line after)
    das      delete (and copy) sentence (+space after it)
    ci"      change/edit text inside "-quotes
    ciB      change/edit text inside {-blocks  SUPERB FOR CODING
    cit      change/edit text in HTML/XML tags [!!!!]

More Operators:
    gq      format text (according to textwidth setting)
    =       format code (mainly c/brace-styled)  = VERY USEFUL

SEARCH-HISTORY/COMMAND-LINE HISTORY-WINDOWS ****  __
    q/      Open search-history-window (+edit, and press Enter)
    q:      Open command-line history-window (+edit, and press Enter)


REGISTERS(BASIC) & MAKROS ***    #+maybe: "= (insert: c-r= )   !!
    "ay / "ad           save text to register a
    "ap                 paste text from register a
    (+ concerning Ctrl+r from insert mode)
Tip registers:
"+p         paste from global clipboard (i.e. like with usual Ctrl+V)
"*p         paste v-marked text (i.e. in web browser etc)

---- Navigate Code __TODO__ ------------------
gd gD
]{   (etc)

---- 'Macros' ** -----------------------------
qa              record macro/key-sequence to register a
q               stop recording
@a              run macro recorded into register a
50@a            -- " -- 50 times

TIP: Macros are saved as simple strings in char-named registers,
     which can then be pasted, edited as (mostly) regular text
     and then deleted back to a register and run (i.e. as macros)
----
c-v Key-press   'Quote' key
                (i.e. Enter would be entered 'literaly'
                 as 
)


---- insert-mode editing ----
c-w             delete currently started word
        teh|
        coh|

---- Vim Commandline -------------------------
    [see 'Options' above]


